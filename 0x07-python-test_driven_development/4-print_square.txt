#!/usr/bin/python3
"""
Unittests for the 4-print_square module.
"""

import unittest
from io import StringIO
from unittest.mock import patch
from print_square import print_square


class TestPrintSquare(unittest.TestCase):
    def test_print_square_with_positive_size(self):
        with patch('sys.stdout', new_callable=StringIO) as mock_stdout:
            print_square(3)
            expected_output = "###\n###\n###\n"
            self.assertEqual(mock_stdout.getvalue(), expected_output)

    def test_print_square_with_zero_size(self):
        with patch('sys.stdout', new_callable=StringIO) as mock_stdout:
            print_square(0)
            self.assertEqual(mock_stdout.getvalue(), "")

    def test_print_square_with_negative_size(self):
        with self.assertRaises(ValueError) as context:
            print_square(-2)
        self.assertEqual(str(context.exception), "size must be >= 0")

    def test_print_square_with_non_integer_size(self):
        with self.assertRaises(TypeError) as context:
            print_square("hello")
        self.assertEqual(str(context.exception), "size must be an integer")


if __name__ == "__main__":
    unittest.main()
