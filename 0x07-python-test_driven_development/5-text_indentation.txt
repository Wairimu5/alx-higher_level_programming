#!/usr/bin/python3
"""
Unittests for the 5-text_indentation module.
"""

import unittest
from io import StringIO
from unittest.mock import patch
from text_indentation import text_indentation


class TestTextIndentation(unittest.TestCase):
    def test_text_indentation_with_valid_text(self):
        with patch('sys.stdout', new_callable=StringIO) as mock_stdout:
            text_indentation("Lorem ipsum dolor sit amet. Quonam modo? Utrum igitur tibi litteram videor an totas paginas commovere? Non autem hoc:")
            expected_output = "Lorem ipsum dolor sit amet.\n\nQuonam modo?\n\nUtrum igitur tibi litteram videor an totas paginas commovere?\n\nNon autem hoc:\n"
            self.assertEqual(mock_stdout.getvalue(), expected_output)

    def test_text_indentation_with_empty_text(self):
        with patch('sys.stdout', new_callable=StringIO) as mock_stdout:
            text_indentation("")
            self.assertEqual(mock_stdout.getvalue(), "")

    def test_text_indentation_with_non_string_text(self):
        with self.assertRaises(TypeError) as context:
            text_indentation(123)
        self.assertEqual(str(context.exception), "text must be a string")


if __name__ == "__main__":
    unittest.main()
